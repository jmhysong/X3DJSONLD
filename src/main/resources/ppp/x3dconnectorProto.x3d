<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd"><head><meta name="title" content="x3dconnectorProto"></meta>
<meta name="creator" content="Lost, Doug Sanden I think"></meta>
<meta name="generator" content="manual"></meta>
<meta name="identifier" content="http://coderextreme.net/X3DJSONLD/x3dconnectorProto.x3d"></meta>
<meta name="description" content="a generic proto to connect two objects"></meta>
<meta name="translated" content="02 May 2017"></meta>
<meta name="generator" content="X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"></meta>
<meta name="reference" content="X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"></meta>
<meta name="translated" content="2 May 2017"></meta>
<meta name="generator" content="X3DJSONLD: https://github.com/coderextreme/X3DJSONLD"></meta>
</head>
<Scene><Viewpoint position="0 0 5" description="Only Viewpoint"></Viewpoint>
<Background skyColor="0.4 0.4 0.4"></Background>
<Transform DEF="G1"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.7 0.2 0.2"></Material>
</Appearance>
<Sphere containerField="geometry" radius="0.1"></Sphere>
</Shape>
<PlaneSensor description="Grab to move" DEF="PS1"></PlaneSensor>
<ROUTE fromNode="PS1" fromField="translation_changed" toNode="G1" toField="set_translation"></ROUTE>
</Transform>
<Transform DEF="G2" translation="1 -1 0.01"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.2"></Material>
</Appearance>
<Sphere containerField="geometry" radius="0.1"></Sphere>
</Shape>
<PlaneSensor description="Grab to move" DEF="PS2"></PlaneSensor>
<ROUTE fromNode="PS2" fromField="translation_changed" toNode="G2" toField="set_translation"></ROUTE>
</Transform>
<Transform DEF="G3" translation="1 1 0.01"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.2"></Material>
</Appearance>
<Sphere containerField="geometry" radius="0.1"></Sphere>
</Shape>
<PlaneSensor description="Grab to move" DEF="PS3"></PlaneSensor>
<ROUTE fromNode="PS3" fromField="translation_changed" toNode="G3" toField="set_translation"></ROUTE>
</Transform>
<Transform DEF="G4" translation="-1 1 0.01"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.2"></Material>
</Appearance>
<Sphere containerField="geometry" radius="0.1"></Sphere>
</Shape>
<PlaneSensor description="Grab to move" DEF="PS4"></PlaneSensor>
<ROUTE fromNode="PS4" fromField="translation_changed" toNode="G4" toField="set_translation"></ROUTE>
</Transform>
<Transform DEF="C1"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.7" transparency="0.5"></Material>
</Appearance>
<Cylinder containerField="geometry" radius="0.05"></Cylinder>
</Shape>
</Transform>
<Transform DEF="C2"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.7" transparency="0.5"></Material>
</Appearance>
<Cylinder containerField="geometry" radius="0.05"></Cylinder>
</Shape>
</Transform>
<Transform DEF="C3"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.2 0.7 0.7" transparency="0.5"></Material>
</Appearance>
<Cylinder containerField="geometry" radius="0.05"></Cylinder>
</Shape>
</Transform>
<Script DEF="DECLx3dconnector_connector1_S1"><field name="startnode" accessType="initializeOnly" type="SFNode"><Transform USE="G1"></Transform>
</field>
<field name="endnode" accessType="initializeOnly" type="SFNode"><Transform USE="G2"></Transform>
</field>
<field name="connectornode" accessType="initializeOnly" type="SFNode"><Transform USE="C1"></Transform>
</field>
<field name="set_startpoint" accessType="inputOnly" type="SFVec3f"></field>
<field name="set_endpoint" accessType="inputOnly" type="SFVec3f"></field>
<![CDATA[ecmascript:
            function recompute(startpoint,endpoint){
	        if (typeof endpoint === 'undefined') {
			return;
		}
                var dif = endpoint.subtract(startpoint);
                var dist = dif.length()*.5;
                var dif2 = dif.multiply(.5);
                var norm = dif.normalize();
                var trans = startpoint.add(dif2);
                connectornode.scale = new SFVec3f(1.0,dist,1.0);
                connectornode.translation = trans;
                connectornode.rotation = new SFRotation(new SFVec3f(0.0,1.0,0.0),norm);
                //Browser.print('norm='+norm.toString());
                //Browser.print('rotation='+rotation.toString());
            }
            function initialize(){
                recompute(startnode.translation,endnode.translation);
            }
            function set_startpoint(val,t){
                recompute(val,endnode.translation);
            }
            function set_endpoint(val,t){
                recompute(startnode.translation,val);
            }
]]></Script>
<Script DEF="DECLx3dconnector_connector2_S1"><field name="startnode" accessType="initializeOnly" type="SFNode"><Transform USE="G1"></Transform>
</field>
<field name="endnode" accessType="initializeOnly" type="SFNode"><Transform USE="G3"></Transform>
</field>
<field name="connectornode" accessType="initializeOnly" type="SFNode"><Transform USE="C2"></Transform>
</field>
<field name="set_startpoint" accessType="inputOnly" type="SFVec3f"></field>
<field name="set_endpoint" accessType="inputOnly" type="SFVec3f"></field>
<![CDATA[ecmascript:
            function recompute(startpoint,endpoint){
	        if (typeof endpoint === 'undefined') {
			return;
		}
                var dif = endpoint.subtract(startpoint);
                var dist = dif.length()*.5;
                var dif2 = dif.multiply(.5);
                var norm = dif.normalize();
                var trans = startpoint.add(dif2);
                connectornode.scale = new SFVec3f(1.0,dist,1.0);
                connectornode.translation = trans;
                connectornode.rotation = new SFRotation(new SFVec3f(0.0,1.0,0.0),norm);
                //Browser.print('norm='+norm.toString());
                //Browser.print('rotation='+rotation.toString());
            }
            function initialize(){
                recompute(startnode.translation,endnode.translation);
            }
            function set_startpoint(val,t){
                recompute(val,endnode.translation);
            }
            function set_endpoint(val,t){
                recompute(startnode.translation,val);
            }
]]></Script>
<Script DEF="DECLx3dconnector_connector3_S1"><field name="startnode" accessType="initializeOnly" type="SFNode"><Transform USE="G1"></Transform>
</field>
<field name="endnode" accessType="initializeOnly" type="SFNode"><Transform USE="G4"></Transform>
</field>
<field name="connectornode" accessType="initializeOnly" type="SFNode"><Transform USE="C3"></Transform>
</field>
<field name="set_startpoint" accessType="inputOnly" type="SFVec3f"></field>
<field name="set_endpoint" accessType="inputOnly" type="SFVec3f"></field>
<![CDATA[ecmascript:
            function recompute(startpoint,endpoint){
	        if (typeof endpoint === 'undefined') {
			return;
		}
                var dif = endpoint.subtract(startpoint);
                var dist = dif.length()*.5;
                var dif2 = dif.multiply(.5);
                var norm = dif.normalize();
                var trans = startpoint.add(dif2);
                connectornode.scale = new SFVec3f(1.0,dist,1.0);
                connectornode.translation = trans;
                connectornode.rotation = new SFRotation(new SFVec3f(0.0,1.0,0.0),norm);
                //Browser.print('norm='+norm.toString());
                //Browser.print('rotation='+rotation.toString());
            }
            function initialize(){
                recompute(startnode.translation,endnode.translation);
            }
            function set_startpoint(val,t){
                recompute(val,endnode.translation);
            }
            function set_endpoint(val,t){
                recompute(startnode.translation,val);
            }
]]></Script>
<ROUTE fromNode="G1" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_startpoint"></ROUTE>
<ROUTE fromNode="G2" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_endpoint"></ROUTE>
<ROUTE fromNode="G1" fromField="translation_changed" toNode="DECLx3dconnector_connector2_S1" toField="set_startpoint"></ROUTE>
<ROUTE fromNode="G3" fromField="translation_changed" toNode="DECLx3dconnector_connector2_S1" toField="set_endpoint"></ROUTE>
<ROUTE fromNode="G1" fromField="translation_changed" toNode="DECLx3dconnector_connector3_S1" toField="set_startpoint"></ROUTE>
<ROUTE fromNode="G4" fromField="translation_changed" toNode="DECLx3dconnector_connector3_S1" toField="set_endpoint"></ROUTE>
</Scene>
</X3D>