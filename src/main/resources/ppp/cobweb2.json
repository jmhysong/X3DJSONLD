{
  "X3D": {
    "encoding": "UTF-8",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "@profile": "Immersive",
    "@version": "3.3",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "geo.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "Tour around a prismatic sphere"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "identifier",
          "@content": "http://coderextreme.net/X3DJSONLD/geo.x3d"
        },
        {
          "@name": "translated",
          "@content": "13 March 2016"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "translated",
          "@content": "02 May 2017"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {
            "@type": [
              "EXAMINE"
            ]
          }
        },
        {
          "Viewpoint": {
            "@position": [
              0,
              0,
              4
            ],
            "@orientation": [
              1,
              0,
              0,
              0
            ],
            "@description": "Bubbles in action"
          }
        },
        {
          "Background": {
            "@backUrl": [
              "images/BK.png",
              "http://coderextreme.net/X3DJSONLD/images/BK.png"
            ],
            "@bottomUrl": [
              "images/BT.png",
              "http://coderextreme.net/X3DJSONLD/images/BT.png"
            ],
            "@frontUrl": [
              "images/FR.png",
              "http://coderextreme.net/X3DJSONLD/images/FR.png"
            ],
            "@leftUrl": [
              "images/LF.png",
              "http://coderextreme.net/X3DJSONLD/images/LF.png"
            ],
            "@rightUrl": [
              "images/RT.png",
              "http://coderextreme.net/X3DJSONLD/images/RT.png"
            ],
            "@topUrl": [
              "images/TP.png",
              "http://coderextreme.net/X3DJSONLD/images/TP.png"
            ]
          }
        },
        {},
        {
          "Transform": {
            "@DEF": "DECLBubble_bubbleA_transform",
            "-children": [
              {
                "Shape": {
                  "-geometry": {
                    "Sphere": {
                      "@radius": 0.25
                    }
                  },
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            1,
                            0,
                            0
                          ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  }
                }
              },
              {
                "Script": {
                  "@DEF": "DECLBubble_bubbleA_bounce",
                  "field": [
                    {
                      "@name": "scale",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        1,
                        1,
                        1
                      ]
                    },
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "velocity",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "scalvel",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_fraction",
                      "@accessType": "inputOnly",
                      "@type": "SFFloat"
                    }
                  ],
                  "#sourceText": [
                    "ecmascript:",
                    "function initialize() {",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);",
                    "",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);",
                    "}",
                    "",
                    "function set_translation(value) {",
                    "   translation = value;",
                    "}",
                    "",
                    "function set_scale(value) {",
                    "   scale = value;",
                    "}",
                    "",
                    "function translation_changed() {",
                    "\treturn translation;",
                    "}",
                    "",
                    "function set_fraction(value) {",
                    "    if (typeof translation === 'undefined') {",
                    "\t\ttranslation = [0, 0, 0];",
                    "    }",
                    "    if (typeof velocity === 'undefined') {",
                    "\t\tvelocity = [0, 0, 0];",
                    "    }",
                    "    if (typeof scalevel === 'undefined') {",
                    "\t\tscalevel = [0, 0, 0];",
                    "    }",
                    "    if (typeof scale === 'undefined') {",
                    "\t\tscale = [1, 1, 1];",
                    "    }",
                    "    translation = new SFVec3f(\ttranslation[0] + velocity[0], translation[1] + velocity[1], translation[2] + velocity[2]);",
                    "    scale = new SFVec3f(scale[0] + scalvel[0], scale[1] + scalvel[1], scale[2] + scalvel[2]);",
                    "    for (var j = 0; j &lt; 3; j++) {",
                    "\t    // if you get to far away or too big, explode",
                    "\t    if ( Math.abs(translation[j]) &gt; 256) {",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "\t    if (Math.abs(scale[j]) &gt; 20) {",
                    "\t\tscale[j] = scale[j]/2;",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "    }",
                    "}"
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLBubble_bubbleA_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleA_transform",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleA_bounce",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleA_transform",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleA_bounce",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleA_bounce",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleA_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleA_bounce",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleA_transform",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleA_bubbleClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLBubble_bubbleA_bounce",
                  "@toField": "set_fraction"
                }
              }
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "DECLBubble_bubbleB_transform",
            "-children": [
              {
                "Shape": {
                  "-geometry": {
                    "Sphere": {
                      "@radius": 0.25
                    }
                  },
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            1,
                            0,
                            0
                          ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  }
                }
              },
              {
                "Script": {
                  "@DEF": "DECLBubble_bubbleB_bounce",
                  "field": [
                    {
                      "@name": "scale",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        1,
                        1,
                        1
                      ]
                    },
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "velocity",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "scalvel",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_fraction",
                      "@accessType": "inputOnly",
                      "@type": "SFFloat"
                    }
                  ],
                  "#sourceText": [
                    "ecmascript:",
                    "function initialize() {",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);",
                    "",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);",
                    "}",
                    "",
                    "function set_translation(value) {",
                    "   translation = value;",
                    "}",
                    "",
                    "function set_scale(value) {",
                    "   scale = value;",
                    "}",
                    "",
                    "function translation_changed() {",
                    "\treturn translation;",
                    "}",
                    "",
                    "function set_fraction(value) {",
                    "    if (typeof translation === 'undefined') {",
                    "\t\ttranslation = [0, 0, 0];",
                    "    }",
                    "    if (typeof velocity === 'undefined') {",
                    "\t\tvelocity = [0, 0, 0];",
                    "    }",
                    "    if (typeof scalevel === 'undefined') {",
                    "\t\tscalevel = [0, 0, 0];",
                    "    }",
                    "    if (typeof scale === 'undefined') {",
                    "\t\tscale = [1, 1, 1];",
                    "    }",
                    "    translation = new SFVec3f(\ttranslation[0] + velocity[0], translation[1] + velocity[1], translation[2] + velocity[2]);",
                    "    scale = new SFVec3f(scale[0] + scalvel[0], scale[1] + scalvel[1], scale[2] + scalvel[2]);",
                    "    for (var j = 0; j &lt; 3; j++) {",
                    "\t    // if you get to far away or too big, explode",
                    "\t    if ( Math.abs(translation[j]) &gt; 256) {",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "\t    if (Math.abs(scale[j]) &gt; 20) {",
                    "\t\tscale[j] = scale[j]/2;",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "    }",
                    "}"
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLBubble_bubbleB_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleB_transform",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleB_bounce",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleB_transform",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleB_bounce",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleB_bounce",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleB_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleB_bounce",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleB_transform",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleB_bubbleClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLBubble_bubbleB_bounce",
                  "@toField": "set_fraction"
                }
              }
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "DECLBubble_bubbleC_transform",
            "-children": [
              {
                "Shape": {
                  "-geometry": {
                    "Sphere": {
                      "@radius": 0.25
                    }
                  },
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            1,
                            0,
                            0
                          ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  }
                }
              },
              {
                "Script": {
                  "@DEF": "DECLBubble_bubbleC_bounce",
                  "field": [
                    {
                      "@name": "scale",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        1,
                        1,
                        1
                      ]
                    },
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "velocity",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "scalvel",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_fraction",
                      "@accessType": "inputOnly",
                      "@type": "SFFloat"
                    }
                  ],
                  "#sourceText": [
                    "ecmascript:",
                    "function initialize() {",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);",
                    "",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);",
                    "}",
                    "",
                    "function set_translation(value) {",
                    "   translation = value;",
                    "}",
                    "",
                    "function set_scale(value) {",
                    "   scale = value;",
                    "}",
                    "",
                    "function translation_changed() {",
                    "\treturn translation;",
                    "}",
                    "",
                    "function set_fraction(value) {",
                    "    if (typeof translation === 'undefined') {",
                    "\t\ttranslation = [0, 0, 0];",
                    "    }",
                    "    if (typeof velocity === 'undefined') {",
                    "\t\tvelocity = [0, 0, 0];",
                    "    }",
                    "    if (typeof scalevel === 'undefined') {",
                    "\t\tscalevel = [0, 0, 0];",
                    "    }",
                    "    if (typeof scale === 'undefined') {",
                    "\t\tscale = [1, 1, 1];",
                    "    }",
                    "    translation = new SFVec3f(\ttranslation[0] + velocity[0], translation[1] + velocity[1], translation[2] + velocity[2]);",
                    "    scale = new SFVec3f(scale[0] + scalvel[0], scale[1] + scalvel[1], scale[2] + scalvel[2]);",
                    "    for (var j = 0; j &lt; 3; j++) {",
                    "\t    // if you get to far away or too big, explode",
                    "\t    if ( Math.abs(translation[j]) &gt; 256) {",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "\t    if (Math.abs(scale[j]) &gt; 20) {",
                    "\t\tscale[j] = scale[j]/2;",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "    }",
                    "}"
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLBubble_bubbleC_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleC_transform",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleC_bounce",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleC_transform",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleC_bounce",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleC_bounce",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleC_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleC_bounce",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleC_transform",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleC_bubbleClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLBubble_bubbleC_bounce",
                  "@toField": "set_fraction"
                }
              }
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "DECLBubble_bubbleD_transform",
            "-children": [
              {
                "Shape": {
                  "-geometry": {
                    "Sphere": {
                      "@radius": 0.25
                    }
                  },
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            1,
                            0,
                            0
                          ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  }
                }
              },
              {
                "Script": {
                  "@DEF": "DECLBubble_bubbleD_bounce",
                  "field": [
                    {
                      "@name": "scale",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        1,
                        1,
                        1
                      ]
                    },
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "velocity",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "scalvel",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_fraction",
                      "@accessType": "inputOnly",
                      "@type": "SFFloat"
                    }
                  ],
                  "#sourceText": [
                    "ecmascript:",
                    "function initialize() {",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);",
                    "",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);",
                    "}",
                    "",
                    "function set_translation(value) {",
                    "   translation = value;",
                    "}",
                    "",
                    "function set_scale(value) {",
                    "   scale = value;",
                    "}",
                    "",
                    "function translation_changed() {",
                    "\treturn translation;",
                    "}",
                    "",
                    "function set_fraction(value) {",
                    "    if (typeof translation === 'undefined') {",
                    "\t\ttranslation = [0, 0, 0];",
                    "    }",
                    "    if (typeof velocity === 'undefined') {",
                    "\t\tvelocity = [0, 0, 0];",
                    "    }",
                    "    if (typeof scalevel === 'undefined') {",
                    "\t\tscalevel = [0, 0, 0];",
                    "    }",
                    "    if (typeof scale === 'undefined') {",
                    "\t\tscale = [1, 1, 1];",
                    "    }",
                    "    translation = new SFVec3f(\ttranslation[0] + velocity[0], translation[1] + velocity[1], translation[2] + velocity[2]);",
                    "    scale = new SFVec3f(scale[0] + scalvel[0], scale[1] + scalvel[1], scale[2] + scalvel[2]);",
                    "    for (var j = 0; j &lt; 3; j++) {",
                    "\t    // if you get to far away or too big, explode",
                    "\t    if ( Math.abs(translation[j]) &gt; 256) {",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "\t    if (Math.abs(scale[j]) &gt; 20) {",
                    "\t\tscale[j] = scale[j]/2;",
                    "\t\ttranslation[j] = 0;",
                    "\t\tinitialize();",
                    "\t    }",
                    "    }",
                    "}"
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLBubble_bubbleD_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleD_transform",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleD_bounce",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleD_transform",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleD_bounce",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleD_bounce",
                  "@fromField": "translation_changed",
                  "@toNode": "DECLBubble_bubbleD_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleD_bounce",
                  "@fromField": "scale_changed",
                  "@toNode": "DECLBubble_bubbleD_transform",
                  "@toField": "set_scale"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLBubble_bubbleD_bubbleClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLBubble_bubbleD_bounce",
                  "@toField": "set_fraction"
                }
              }
            ]
          }
        }
      ]
    }
  }
}