<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.0//EN" "http://www.web3d.org/specifications/x3d-3.0.dtd">
<X3D profile='Immersive' version='3.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.0.xsd'>
    <head>
        <meta name='flowers2.x3d' content='title'/>
        <meta name='author' content='John Carlson'/>
        <meta name='transcriber' content='John Carlson'/>
        <meta name='created' content='23 January 2005'/>
        <meta name='modified' content='05 May 2017'/>
        <meta name='description' content='2 random mathematical roses in spherical dimensions. rho = a + b * cos(c * theta) * cos(d * phi)'/>
        <meta name='url' content='https://coderextreme.net/x3d/flowers2.x3d'/>
        <meta name='generator' content='manually written'/>
    </head>
    <Scene>
        <NavigationInfo avatarSize='0.25 1.6 0.75' transitionType='"LINEAR"' type='"EXAMINE" "ANY"'/>
        <Viewpoint description='Two mathematical orbitals' position='0 0 50'/>
        <Group>
            <DirectionalLight direction='1 1 1'/>
            <Transform DEF='OrbitTransform' translation='8 0 0'>
                <Shape>
                    <Appearance>
                        <Material diffuseColor='0 0.5 1' specularColor='0 0.5 1'/>
                    </Appearance>
                    <IndexedFaceSet DEF='Orbit' creaseAngle='1.57'>
                        <Coordinate DEF='OrbitCoordinates'/>
                    </IndexedFaceSet>
                </Shape>
            </Transform>
            <Transform DEF='OrbitTransform2' translation='-8 0 0'>
                <Shape>
                    <Appearance>
                        <Material diffuseColor='1 0.5 0' specularColor='1 0.5 0' transparency='0.75'/>
                    </Appearance>
                    <IndexedFaceSet DEF='Orbit2' creaseAngle='1.57'>
                        <Coordinate DEF='OrbitCoordinates2'/>
                    </IndexedFaceSet>
                </Shape>
            </Transform>
            <TimeSensor DEF='Clock' cycleInterval='16.0' loop='true'/>
            <OrientationInterpolator DEF='OrbitPath' key='0 0.5 1' keyValue='1 0 0 0 1 0 0 3.14 1 0 0 6.28'/>
            <Script DEF='OrbitScript'>
                <field name='set_fraction' accessType='inputOnly' type='SFFloat'/>
                <field name='coordinates' accessType='outputOnly' type='MFVec3f'/>
                <field name='coordIndexes' accessType='outputOnly' type='MFInt32'/>
<![CDATA[


ecmascript:

var e = 5;
var f = 5;
var g = 5;
var h = 5;

function initialize() {
     resolution = 100;
     var localci = new MFInt32();
     generateCoordinates(resolution);
     ci = 0;
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     localci[ci] = i*resolution+j;
	     localci[ci+1] = i*resolution+j+1;
	     localci[ci+2] = (i+1)*resolution+j+1;
	     localci[ci+3] = (i+1)*resolution+j;
	     localci[ci+4] = -1;
	     ci += 5;
	}
    }
    coordIndexes = localci;
}

function generateCoordinates(resolution) {
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     var localc = new MFVec3f();
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		localc[i*resolution+j] = [];
		localc[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		localc[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		localc[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }
     coordinates = localc;
}

function set_fraction(fraction, eventTime) {
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	resolution = 100;
	generateCoordinates(resolution);
}

]]>
            </Script>
            <Script DEF='OrbitScript2'>
                <field name='set_fraction' accessType='inputOnly' type='SFFloat'/>
                <field name='coordinates' accessType='outputOnly' type='MFVec3f'/>
                <field name='coordIndexes' accessType='outputOnly' type='MFInt32'/>
<![CDATA[


ecmascript:

var e = 5;
var f = 5;
var g = 5;
var h = 5;

function initialize() {
     resolution = 100;
     var localci = new MFInt32();
     generateCoordinates(resolution);
     ci = 0;
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     localci[ci] = i*resolution+j;
	     localci[ci+1] = i*resolution+j+1;
	     localci[ci+2] = (i+1)*resolution+j+1;
	     localci[ci+3] = (i+1)*resolution+j;
	     localci[ci+4] = -1;
	     ci += 5;
	}
    }
    coordIndexes = localci;
}

function generateCoordinates(resolution) {
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     var localc = new MFVec3f();
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		localc[i*resolution+j] = new SFVec3f();
		localc[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		localc[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		localc[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }
     coordinates = localc;
}

function set_fraction(fraction, eventTime) {
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	resolution = 100;
	generateCoordinates(resolution);
}

]]>
            </Script>
        </Group>
        <ROUTE fromField='coordIndexes' fromNode='OrbitScript' toField='set_coordIndex' toNode='Orbit'/>
        <ROUTE fromField='coordinates' fromNode='OrbitScript' toField='set_point' toNode='OrbitCoordinates'/>
        <ROUTE fromField='coordIndexes' fromNode='OrbitScript2' toField='set_coordIndex' toNode='Orbit2'/>
        <ROUTE fromField='coordinates' fromNode='OrbitScript2' toField='set_point' toNode='OrbitCoordinates2'/>
        <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitScript'/>
        <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitScript2'/>
        <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitPath'/>
        <ROUTE fromField='value_changed' fromNode='OrbitPath' toField='set_rotation' toNode='OrbitTransform'/>
        <ROUTE fromField='value_changed' fromNode='OrbitPath' toField='set_rotation' toNode='OrbitTransform2'/>
    </Scene>
</X3D>
